---
app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: ${BACKSTAGE_APPLICATION_BASE_URL}

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: ${BACKSTAGE_APPLICATION_BASE_URL}
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  cors:
    origin: ${BACKSTAGE_APPLICATION_BASE_URL}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  reading:
    allow:
      - host: 'raw.githubusercontent.com'

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      # password: ${POSTGRES_PASSWORD} # Not needed when using a service account
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

techdocs:
  builder: 'local'  # Alternatives - 'external'
  generator:
    runIn: 'local'  # Alternatives - 'local'
  publisher:
    type: 'googleGcs'
    googleGcs:
      bucketName: ${TECHDOCS_STORAGE_BUCKET}

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../templates/BITS/domains.yaml
      rules:
        - allow: [Location, Domain]

    # Import Add Backstage template from a file - todo: stop putting this in the container and use a URL
    - type: file
      # target: "https://raw.githubusercontent.com/broadinstitute/backstage/refs/heads/${BRANCH_NAME}/backstage/templates/scaffolder/pr-with-catalog-entry/template.yaml"
      target: ../../templates/scaffolder/pr-with-catalog-entry/template.yaml
      rules:
        - allow: [Template]

    - type: file
      # target: "https://raw.githubusercontent.com/broadinstitute/backstage/refs/heads/${BRANCH_NAME}/backstage/templates/scaffolder/terraform-control-module/template.yaml"
      target: ../../templates/scaffolder/terraform-control-module/template.yaml
      rules:
        - allow: [Template]

    - type: file
      # target: "https://raw.githubusercontent.com/broadinstitute/backstage/refs/heads/${BRANCH_NAME}/backstage/templates/scaffolder/terraform-with-terragrunt/template.yaml"
      target: ../../templates/scaffolder/terraform-with-terragrunt/template.yaml
      rules:
        - allow: [Template]

    - type: file
      # target: "https://raw.githubusercontent.com/broadinstitute/backstage/refs/heads/${BRANCH_NAME}/backstage/templates/scaffolder/terraform-storage-transfer/template.yaml"
      target: ../../templates/scaffolder/terraform-storage-transfer/template.yaml
      rules:
        - allow: [Template]

  providers:
    githubOrg:
      - id: production
        githubUrl: https://github.com
        orgs: ['broadinstitute']
        schedule:
          initialDelay: PT30S
          frequency: PT1H
          timeout: PT5M
    github:
      # the provider ID can be any camelCase string
      providerId:
        organization: 'broadinstitute'  # string
        catalogPath: '/catalog-info.yaml'  # string
        validateLocationsExist: true
        filters:
          branch: 'main'  # string
          repository: '.*'  # Regex
        schedule:  # same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: PT30M
          # supports ISO duration, "human duration" as used in code
          timeout: PT3M
      importDSP:
        organization: 'broadinstitute'  # string
        catalogPath: '/foundation.yaml'  # string
        validateLocationsExist: true
        filters:
          branch: 'main'  # string
          repository: '.*'  # Regex
        schedule:  # same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: PT90M
          # supports ISO duration, "human duration" as used in code
          timeout: PT3M
pagerDuty:
  oauth:
    clientId: ${PD_CLIENT_ID}
    clientSecret: ${PD_CLIENT_SECRET}
    subDomain: ${PD_ACCOUNT_SUBDOMAIN}
