---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python-package
  title: Create a pip-installable Python package
  description: >-
    This template provides a skeleton for a standard Python package along with
    devnull-standard CI tooling.
  tags:
    - python
    - production

spec:
  owner: group:devnull
  type: service
  parameters:
    - $yaml: ../defaults/parameters/resource-info.yaml
    - $yaml: ../defaults/parameters/annotations.yaml
    - title: CI settings
      required:
        - author
      properties:
        author:
          title: Package Author
          type: string
          description: >-
            Name of the person or group maintaining this package.
        pypiRepository:
          title: PyPI Repository
          type: string
          description: >-
            Name of the repository to publish the package to. This is an
            arbitrary identifier -- the only real requirement is that it match
            the value locally configured with poetry.

    - title: Github settings
      required:
        - githubTeam
        - repoUrl
      properties:
        githubTeam:
          title: GitHub Team
          type: string
          ui:field: OwnerPicker
          description: The GitHub team that owns the repository.
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: team
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          default: github.com?owner=broadinstitute
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - broadinstitute

        visibility:
          title: Repo Visibility
          type: string
          description: >-
            Should people outside of the Broad be able to see this repo? If
            you're unsure, please err on the side of caution and leave this
            setting as 'Private'. It can be changed later.
          default: private
          enum:
            - public
            - private
          enumNames:
            - Public
            - Private

  steps:
    - id: fetchTemplate
      name: Generate Template
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          author: ${{ parameters.author }}
          pypiRepository: ${{ parameters.pypiRepository }}
          githubRepo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          githubOrg: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          repoOwner: >-
            ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.githubTeam | parseEntityRef | pick('name') }}

    - $yaml: ../defaults/steps/write-catalog.yaml
    - $yaml: ../defaults/steps/system.yaml
    - $yaml: ../defaults/steps/system-write.yaml
    - $yaml: ../defaults/steps/domain.yaml
    - $yaml: ../defaults/steps/domain-write.yaml
    - $yaml: ../defaults/steps/links.yaml
    - $yaml: ../defaults/steps/links-write.yaml
    - $yaml: ../defaults/steps/annotations/techdocs.yaml
    - $yaml: ../defaults/steps/annotations/techdocs-write.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes-write.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild-write.yaml
    - $yaml: ../defaults/steps/annotations/pagerduty.yaml
    - $yaml: ../defaults/steps/annotations/pagerduty-write.yaml
    - $yaml: ../defaults/steps/publish.yaml
    - $yaml: ../defaults/steps/register.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
