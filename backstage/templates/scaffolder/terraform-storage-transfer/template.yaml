---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-storage-transfer-template
  title: Manage Google Cloud Storage Transfer Service using Terraform
  description: >-
    This template provides a base for setting up and managing Google Cloud
    Storage Transfer Service with Terraform. It uses the Terraform conventions
    provided more generally by `terraform-control-module-template`.
  tags:
    - recommended
    - terraform
    - gcp
    - production

spec:
  owner: group:devnull
  type: service
  parameters:
    - $yaml: ../defaults/parameters/resource-info.yaml
    - $yaml: ../defaults/parameters/annotations.yaml
    - title: Github settings
      required:
        - githubTeam
        - repoUrl
      properties:
        githubTeam:
          title: GitHub Team
          type: string
          ui:field: OwnerPicker
          description: The GitHub team that owns the repository.
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: team
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          default: github.com?owner=broadinstitute
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - broadinstitute

        visibility:
          title: Repo Visibility
          type: string
          description: >-
            Should people outside of the Broad be able to see this repo? If
            you're unsure, please err on the side of caution and leave this
            setting as 'Private'. It can be changed later.
          default: private
          enum:
            - public
            - private
          enumNames:
            - Public
            - Private

    - title: Terraform Configuration
      required:
        - gcpRegion
        - gcpProject
        - gcsBucket
        - sourceDirectory
      properties:
        gcpRegion:
          title: GCP Region
          type: string
          default: us-east4
          description: >-
            The default region for the Google provider. If you don't have an
            existing preference for a specific region, the default will be
            fine.
        gcpProject:
          title: GCP Project
          type: string
          description: >-
            GCP project managed by the default/primary provider.
            This value will set default values in the template, but will not
            create new projects or otherwise touch existing projects.
        gcsBucket:
          title: GCS Bucket
          type: string
          description: >-
            The name of the GCS bucket to use for this service. It will be used
            to store Terraform state files as well as be the final upload destination.
        sourceDirectory:
          title: Source directory
          type: string
          description: >-
            Absolute path of the directory to be uploaded to the cloud.
        googleProviderVersion:
          title: Google Provider Version
          type: string
          default: 6.49.2
          description: >-
            The version of the Google provider to use in the Terraform
            configuration. Dependabot will be enabled by default and will open
            a PR to update this immediately upon creation of the repository.
        terraformVersion:
          title: Terraform Version
          type: string
          default: 1.12.2
          description: >-
            The version of Terraform to use in the Terraform configuration.
            Dependabot will be enabled by default and will open a PR to update
            this immediately upon creation of the repository.

  steps:
    - id: fetchTemplate
      name: Generate Template
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          gcpRegion: ${{ parameters.gcpRegion }}
          gcpProject: ${{ parameters.gcpProject }}
          gcsBucket: ${{ parameters.gcsBucket }}
          googleProviderVersion: ${{ parameters.googleProviderVersion }}
          terraformVersion: ${{ parameters.terraformVersion }}
          repoOwner: >-
            ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.githubTeam | parseEntityRef | pick('name') }}

    - $yaml: ../defaults/steps/write-catalog.yaml
    - $yaml: ../defaults/steps/system.yaml
    - $yaml: ../defaults/steps/system-write.yaml
    - $yaml: ../defaults/steps/domain.yaml
    - $yaml: ../defaults/steps/domain-write.yaml
    - $yaml: ../defaults/steps/links.yaml
    - $yaml: ../defaults/steps/links-write.yaml
    - $yaml: ../defaults/steps/annotations/techdocs.yaml
    - $yaml: ../defaults/steps/annotations/techdocs-write.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes-write.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild-write.yaml
    - $yaml: ../defaults/steps/annotations/pagerduty.yaml
    - $yaml: ../defaults/steps/publish.yaml
    - $yaml: ../defaults/steps/register.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
