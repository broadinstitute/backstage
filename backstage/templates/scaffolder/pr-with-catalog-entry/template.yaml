---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: open-pr-with-catalog-entry
  title: Onboard your service to Backstage
  description: Create a new PR with your service's details.
  tags:
    - recommended

spec:
  owner: group:devnull
  type: service

  parameters:
    - title: What is your service about?
      required:
        - name
        - description
        - type
        - lifecycle
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component

        title:
          title: Title (optional)
          type: string
          description: >-
            The title of the component. This is a human-readable name for the component.
            If not provided, the name will be used as the title.

        description:
          title: Service description
          type: string

        type:
          title: Component type
          type: string
          default: service
          enum: ['service', 'website', 'resource', 'documentation', 'library', 'API']

        lifecycle:
          title: Service lifecycle
          type: string
          default: production
          enum: ['production', 'experimental', 'deprecated']
          description: >-
            The lifecycle phase of the service. e.g. "production", "experimental", "deprecated"

        system:
          title: System (optional)
          type: string
          description: >-
            A system is a collection of resources and components that share a common purpose.
            e.g. "search", "payments", "infrastructure", "data-platform"
        domain:
          title: Domain (optional)
          type: string
          description: >-
            The domain is collection of systems that share terminology, domain models, metrics, KPIs,
            business purpose, or documentation. i.e. they form a bounded context.
            e.g. "search", "payments", "infrastructure", "data-platform"

        kubernetesAnnotation:
          title: Kubernetes Annotation (optional)
          type: boolean
          default: false
          description: >-
            Add Backstage annotation for the Kubernetes resource. This is used to
            [identify the resource in Kubernetes]
            (https://backstage.io/docs/features/kubernetes/configuration#surfacing-your-kubernetes-components-as-part-of-an-entity).
            If true, the annotation will be added to the Kubernetes resource using the "name" field. Default is false.

        cloudbuildAnnotation:
          title: Cloud Build Annotation (optional)
          type: boolean
          default: false
          description: >-
            Add Backstage annotation for the Cloud Build resource. This is used to
            [identify the resource in Cloud Build]
            (https://github.com/backstage/backstage/tree/master/plugins/cloudbuild#add-annotations-to-your-component-infoyaml-file).
            If true, the annotation will be added to the Cloud Build resource using the "name" field. Default is false.

        addLink:
          title: Add a URL (optional)
          type: string
          description: >-
            Add a default [URL](https://backstage.io/docs/features/software-catalog/descriptor-format/#links-optional).
            If empty no link block will be added.

        tags:
          title: List of tags (optional)
          type: array
          default:
            - bits
            - bits-tools
          items:
            type: string
            title: Backstage Tags

    - title: Choose a location
      required:
        - githubTeam
        - repoUrl
      properties:
        githubTeam:
          title: GitHub Team
          type: string
          ui:field: OwnerPicker
          description: The GitHub team that owns the repository.
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: team

        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          default: github.com?owner=broadinstitute
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - broadinstitute

    - title: Integrations (optional)
      properties:
        pagerdutyIntegrationKey:
          title: PagerDuty integration key
          type: string

  steps:
    - id: fetchTemplate
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description | dump }}
          owner: ${{ parameters.githubTeam | parseEntityRef | pick('name') }}
          tags: ${{ parameters.tags }}
          type: ${{ parameters.type }}
          domain: ${{ parameters.domain }}
          system: ${{ parameters.system }}
          githubRepo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          githubOrg: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          pagerdutyIntegrationKey: ${{ parameters.pagerdutyIntegrationKey }}
          lifecycle: ${{ parameters.lifecycle }}
          title: ${{ parameters.title }}
          kubernetesAnnotation: ${{ parameters.kubernetesAnnotation }}
          cloudbuildAnnotation: ${{ parameters.cloudbuildAnnotation }}
          addLink: ${{ parameters.addLink }}

    - id: createPullRequest
      name: createPullRequest
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: backstage-integration
        title: 'feat: Onboard service to Catalog'
        description: This PR adds a metadata file about this service so that it can be registered in our software catalog.

  output:
    links:
      - title: View the pull request on GitHub
        icon: github
        url: ${{ steps['createPullRequest'].output.remoteUrl }}
