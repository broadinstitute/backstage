---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-cloud-run-template
  title: Deploy a web app with Google Cloud Run and Terraform
  description: >-
    This template provides a base for deploying and managing simple web apps
    with Google Cloud Run via Terraform. It uses the Terraform conventions
    provided more generally by `terraform-control-module-template`.
  tags:
    - recommended
    - terraform
    - gcp
    - production

spec:
  owner: group:devnull
  type: service
  parameters:
    - $yaml: ../defaults/parameters/resource-info.yaml
    - $yaml: ../defaults/parameters/annotations.yaml
    - title: Github settings
      required:
        - githubTeam
        - repoUrl
      properties:
        githubTeam:
          title: GitHub Team
          type: string
          ui:field: OwnerPicker
          description: The GitHub team that owns the repository.
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: team
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          default: github.com?owner=broadinstitute
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - broadinstitute

        visibility:
          title: Repo Visibility
          type: string
          description: >-
            Should people outside of the Broad be able to see this repo? If
            you're unsure, please err on the side of caution and leave this
            setting as 'Private'. It can be changed later.
          default: private
          enum:
            - public
            - private
          enumNames:
            - Public
            - Private

    - title: Terraform Configuration
      required:
        - gcpRegion
        - gcpProjectDev
        - gcpProjectProd
        - gcsBucket
        - applicationName
        - applicationBucket
        - applicationBucketProject
      properties:
        gcpRegion:
          title: GCP Region
          type: string
          default: us-east4
          description: >-
            The default region for the Google provider. If you don't have an
            existing preference for a specific region, the default will be
            fine.
        gcpProjectDev:
          title: Development GCP Project
          type: string
          description: >-
            GCP project managed by the default/primary provider.
            This value will set default values in the template, but will not
            create new projects or otherwise touch existing projects.
        gcpProjectProd:
          title: Production GCP Project
          type: string
          description: >-
            GCP project managed by the default/primary provider.
            This value will set default values in the template, but will not
            create new projects or otherwise touch existing projects.
        gcsBucket:
          title: GCS Bucket
          type: string
          description: >-
            The name of the GCS bucket to use for this service. It will be used
            to store Terraform state files.

        applicationName:
          title: Cloud Run Service Name
          type: string
          description: >-
            An identifier for the deployed service.
            It must be only lowercase letters, digits, and hyphens.
            It cannot end with a hyphen.
            It must be fewer than 50 characters long.
        applicationImage:
          title: Container Image URI
          type: string
          default: docker.io/nginx:latest
          description: >-
            The container image to deploy with Cloud Run. Can be a public
            registry, like Docker Hub, or a private image deployed to Google
            Artifact Registry. If you don't know where the production image
            lives yet, you can leave this as the default and update it later.
        applicationPort:
          title: Application Port
          type: integer
          default: 80
          description: >-
            Port number the container listens on. Must be a valid TCP port
            number between 1 and 65535, inclusive.
        applicationBucket:
          title: Data Bucket
          type: string
          description: >-
            Name of the GCS bucket where the application data are stored.
        applicationBucketProject:
          title: Data Bucket Project
          type: string
          description: >-
            GCS project where the data bucket is located. This can be the same
            as the production service project or a separate project.
        applicationVolumePath:
          title: Bucket Mount Path
          type: string
          default: /usr/share/nginx/html
          description: >-
            Absolute path within the container to mount the GCS bucket. This
            should be where your application expects to find the data.

        googleProviderVersion:
          title: Google Provider Version
          type: string
          default: 6.32.0
          description: >-
            The version of the Google provider to use in the Terraform
            configuration. Dependabot will be enabled by default and will open
            a PR to update this immediately upon creation of the repository.
        terraformVersion:
          title: Terraform Version
          type: string
          default: 1.7.4
          description: >-
            The version of Terraform to use in the Terraform configuration.
            Dependabot will be enabled by default and will open a PR to update
            this immediately upon creation of the repository.

  steps:
    - id: fetchTemplate
      name: Generate Template
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          gcpRegion: ${{ parameters.gcpRegion }}
          gcpProjectDev: ${{ parameters.gcpProjectDev }}
          gcpProjectProd: ${{ parameters.gcpProjectProd }}
          gcsBucket: ${{ parameters.gcsBucket }}
          applicationName: ${{ parameters.applicationName }}
          applicationImage: ${{ parameters.applicationImage }}
          applicationPort: ${{ parameters.applicationPort }}
          applicationBucket: ${{ parameters.applicationBucket }}
          applicationBucketProject: ${{ parameters.applicationBucketProject }}
          applicationVolumePath: ${{ parameters.applicationVolumePath }}
          googleProviderVersion: ${{ parameters.googleProviderVersion }}
          terraformVersion: ${{ parameters.terraformVersion }}
          repoOwner: >-
            ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.githubTeam | parseEntityRef | pick('name') }}

    - $yaml: ../defaults/steps/write-catalog.yaml
    - $yaml: ../defaults/steps/system.yaml
    - $yaml: ../defaults/steps/system-write.yaml
    - $yaml: ../defaults/steps/domain.yaml
    - $yaml: ../defaults/steps/domain-write.yaml
    - $yaml: ../defaults/steps/links.yaml
    - $yaml: ../defaults/steps/links-write.yaml
    - $yaml: ../defaults/steps/annotations/techdocs.yaml
    - $yaml: ../defaults/steps/annotations/techdocs-write.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes.yaml
    - $yaml: ../defaults/steps/annotations/kubernetes-write.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild.yaml
    - $yaml: ../defaults/steps/annotations/cloudbuild-write.yaml
    - $yaml: ../defaults/steps/annotations/pagerduty.yaml
    - $yaml: ../defaults/steps/publish.yaml
    - $yaml: ../defaults/steps/register.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
